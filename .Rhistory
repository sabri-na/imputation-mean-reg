"Cluster 5"="#5DADE2","não"='#FDFEFE')
,limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4","Cluster 5")
)+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
ggplot() +
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'),
limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4","Cluster 5"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'),
limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4","Cluster 5"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
pacman::p_load(ggplot2,sf,dplyr,readxl,geobr,tidyr,viridis,rio,gridExtra)
dados <- read_xlsx('C:\\Users\\sabrina.franca\\Documents\\dados_tratando\\dados_tcc.xlsx')
View(dados)
all_mun <- read_municipality(year=2020)
mun_norte <- all_mun [all_mun$name_region == 'Norte', ]
mun_norte$code_muni<- as.factor(mun_norte$code_muni)
dados$CD_MUN <- as.factor(dados$CD_MUN)
data_filter$ID <- seq.int(nrow(data_filter))
data_filter <- data %>%
filter (NM_REGIAO =="Norte")
data <- read_xlsx("C:\\Users\\sabrina.franca\\Documents\\dados_tratando\\dados brutos\\dados_mun2019.xlsx")
data_filter <- data %>%
filter (NM_REGIAO =="Norte")
data_filter$ID <- seq.int(nrow(data_filter))
ID <- c(336,255,403,432,376)
cluster <- c("Cluster 2","Cluster 3","Cluster 3","Cluster 4","Cluster 5")
df_id <- as.data.frame(cbind(ID,cluster))
df_id$ID <- as.integer(df_id$ID)
resultado_mod1 <- left_join(data_filter,df_id,by="ID")
resultado_mod1$cluster[is.na(resultado_mod1$cluster)] <- "não"
resultado_mod1$prop_agl_dom <- resultado_mod1$PER_AGSN/100
resultado_mod1$CD_MUN <- as.factor(resultado_mod1$CD_MUN)
mun_norte$code_muni <- as.factor(mun_norte$code_muni)
dataset_final <- left_join(mun_norte, resultado_mod1 , by=c("code_muni"="CD_MUN"))
dataset_final$cluster <- as.factor(dataset_final$cluster)
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'),
limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4","Cluster 5"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_manual(values = c("Cluster 2"="#C39BD3","Cluster 3"="#A9DFBF","Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2","não"='#FDFEFE'))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+labs(fill = "")
ID <- c(164,
281, 193, 433,
156,
267,
403,
219,
151)
cluster <- c("Cluster 2", "Cluster 3", "Cluster 3", "Cluster 3",
"Cluster 4", "Cluster 5", "Cluster 6","Cluster 7","Cluster 8")
df_id <- as.data.frame(cbind(ID,cluster))
df_id$ID <- as.integer(df_id$ID)
resultado <- left_join(data_filter,df_id,by="ID")
resultado$cluster[is.na(resultado$cluster)] <- 'não'
resultado$prop_agl_dom <- resultado$PER_AGSN/100
resultado$CD_MUN <- as.factor(resultado$CD_MUN)
dataset_final <- left_join(mun_norte, resultado, by=c("code_muni"="CD_MUN"))
dataset_final$cluster <- as.factor(dataset_final$cluster)
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster),color= '#616A6B', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
#theme(legend.position = "none")+
scale_fill_manual(values = c("Cluster 2"="#C39BD3",
"Cluster 3"="#A9DFBF",
"Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2",
"Cluster 6"="#F1643F",
"Cluster 7"="#E554C9",
"Cluster 8"="#33A26A",
"não"='#797D7F'
),
limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4",
"Cluster 5","Cluster 6","Cluster 7","Cluster 8"))+
labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster),color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
#theme(legend.position = "none")+
scale_fill_manual(values = c("Cluster 2"="#C39BD3",
"Cluster 3"="#A9DFBF",
"Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2",
"Cluster 6"="#F1643F",
"Cluster 7"="#E554C9",
"Cluster 8"="#33A26A",
"não"='#FDFEFE'
),
limits = c("Cluster 2","Cluster 3","Cluster 3","Cluster 4",
"Cluster 5","Cluster 6","Cluster 7","Cluster 8"))+
labs(fill = "")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster),color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
#theme(legend.position = "none")+
scale_fill_manual(values = c("Cluster 2"="#C39BD3",
"Cluster 3"="#A9DFBF",
"Cluster 4"="#F4D03F",
"Cluster 5"="#5DADE2",
"Cluster 6"="#F1643F",
"Cluster 7"="#E554C9",
"Cluster 8"="#33A26A",
"não"='#FDFEFE'
))+
labs(fill = "")
ID <- c(209,260,212,211)
cluster <- c(rep(TRUE,4))
df_id <- as.data.frame(cbind(ID,cluster))
resultado <- left_join(data_filter,df_id,by="ID")
resultado$cluster[is.na(resultado$cluster)] <- FALSE
resultado$prop_agl_dom <- resultado$PER_AGSN/100
resultado$CD_MUN <- as.factor(resultado$CD_MUN)
mun_norte$code_muni<- as.factor(mun_norte$code_muni)
dataset_final <- left_join(mun_norte, resultado, by=c("code_muni"="CD_MUN"))
dataset_final$cluster <- ifelse(dataset_final$cluster , "Cluster 1", "Não")
dataset_final_para <- dataset_final %>%
filter(NM_UF =="Pará")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#616A6B', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")+
scale_fill_manual(values = c("Não"='#797D7F','Cluster 1'="#F2F3F4"),
breaks = c("Cluster 1"))+
labs(fill="")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#616A6B', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")+
scale_fill_manual(values = c("Não" = '#F2F3F4',"Cluster 1" = "#707B7C"),
breaks = c("Cluster 1"))+
labs(fill="")
ggplot() +
geom_sf(data=dataset_final, aes(fill=cluster), color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")+
scale_fill_manual(values = c("Não" = '#F2F3F4',"Cluster 1" = "#707B7C"),
breaks = c("Cluster 1"))+
labs(fill="")
dataset_final_cluster <- dataset_final %>%
filter(cluster =="Cluster 1")
dataset_final_cluster$AGLOMERADO <- ifelse(dataset_final_cluster$AGLOMERADO, "Sim", "Não")
ggplot() +
geom_sf(data=dataset_final_cluster, aes(fill=AGLOMERADO),color= '#7B7D7D', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
scale_fill_manual(values = c("#E5E7E9",'#A6ACAF'))+
theme(legend.position = "top")
dataset_final_cluster$AGLOMERADO <- ifelse(dataset_final_cluster$AGLOMERADO, "Sim", "Não")
dataset_final_cluster$AGLOMERADO <- ifelse(dataset_final_cluster$AGLOMERADO, "Sim", "Não")
dataset_final_cluster$AGLOMERADO <- ifelse(dataset_final_cluster$AGLOMERADO, "Sim", "Não")
ggplot() +
geom_sf(data=dataset_final_cluster, aes(fill=AGLOMERADO),color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
scale_fill_manual(values = c('#99A3A4',"#FDFEFE"))+
theme(legend.position = "top")
dataset_final_cluster <- dataset_final %>%
filter(cluster =="Cluster 1")
dataset_final_cluster$AGLOMERADO <- ifelse(dataset_final_cluster$AGLOMERADO, "Sim", "Não")
ggplot() +
geom_sf(data=dataset_final_cluster, aes(fill=AGLOMERADO),color= '#17202A', size=.15)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
scale_fill_manual(values = c('#99A3A4',"#FDFEFE"))+
theme(legend.position = "top")
pacman::p_load(ggplot2,sf,dplyr,readxl,geobr,tidyr,viridis,rio,gridExtra)
dados <- read_xlsx('C:\\Users\\sabrina.franca\\Documents\\dados_tratando\\dados_tcc.xlsx')
View(dados)
all_mun <- read_municipality(year=2020)
mun_norte <- all_mun [all_mun$name_region == 'Norte', ]
mun_norte$code_muni<- as.factor(mun_norte$code_muni)
dados$CD_MUN <- as.factor(dados$CD_MUN)
dataset_final <- left_join(mun_norte, dados, by=c("code_muni"="CD_MUN"))
dataset_final <- dataset_final %>%
mutate_all(replace_na, 0)
dataset_final$AGLOMERADO <- ifelse(dataset_final$AGLOMERADO, "Sim", "Não")
ggplot() +
geom_sf(data=dataset_final, aes(fill=AGLOMERADO), color= '#7B7D7D')+
theme_minimal()+ scale_fill_manual(values = c('#A6ACAF',"#E5E7E9"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
labs(fill = "Aglomerado") +
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=AGLOMERADO), color= '#17202A')+
theme_minimal()+ scale_fill_manual(values = c('#A6ACAF',"#E5E7E9"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
labs(fill = "Aglomerado") +
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=AGLOMERADO), color= '#17202A')+
theme_minimal()+ scale_fill_manual(values = c("#E5E7E9",'#A6ACAF'))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
labs(fill = "Aglomerado") +
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=AGLOMERADO), color= '#17202A')+
theme_minimal()+ scale_fill_manual(values = c('#99A3A4',"#FDFEFE"))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
labs(fill = "Aglomerado") +
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=AGLOMERADO), color= '#17202A')+
theme_minimal()+ scale_fill_manual(values = c("#FDFEFE",'#99A3A4'))+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
labs(fill = "Aglomerado") +
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "RdGy",
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "gray",
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "greys",
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "Greys",
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "Greys",
direction = -1,
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#7B7D7D', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "Greys",
direction = 1,
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
ggplot() +
geom_sf(data=dataset_final, aes(fill=prop_agl_dom), color= '#17202A', size=.15)+
theme_minimal()+
scale_fill_distiller(palette = "Greys",
direction = 1,
name="Prop. domícilios \nem aglomerados   ")+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())+
theme(legend.position = "top")
pacman::p_load(scanstatistics,ggplot2,dplyr,magrittr,readxl,sp,rio,patchwork)
data <- read_xlsx("C:\\Users\\sabrina.franca\\Documents\\dados_tratando\\dados brutos\\dados_mun2019.xlsx")
data_filter <- data %>%
filter (NM_REGIAO =="Norte")
all_mun <- read_municipality(year=2020)
pacman::p_load(ggplot2,sf,dplyr,readxl,geobr,tidyr,viridis,rio,gridExtra)
mun_norte <- all_mun [all_mun$name_region == 'Norte', ]
all_mun <- read_municipality(year=2020)
mun_norte <- all_mun [all_mun$name_region == 'Norte', ]
data_filter$ID <- seq.int(nrow(data_filter))
ID <- c(209,260,212,211)
data_filter
View(data_filter )
sum(data_filter$EDOC_AGSN)
sum(data_filter$EDOC_AGSN, na.rm = T)
sum(data_filter$EDOC_total, na.rm = T)
sample(c("cara", "coroa"), size = 1, prob = 0.5)
sample(c("cara", "coroa"), size = 1)
sample(c("cara", "coroa"), size = 1, prob = 0.5)
sample(c("cara", "coroa"), size = 1, prob = 5)
sample(c("cara", "coroa"), size = 1)
sd(5,7,8,8)
sd(c(5,7,8,8))
sd(c(6,7,8,9))
mean((c(6,7,8,9)))
pacman::p_load(ggplot2,readxl,dplyr,cowplot,xtable)
### Reading data
dados <- read_xlsx('data_imput.xlsx')
setwd(C:\\Users\\sabrina.franca\\Documents//pibic)
setwd(C:\\Users\\sabrina.franca\\Documents\\pibic)
setwd('C:\\Users\\sabrina.franca\\Documents\\pibic')
### Reading data
dados <- read_xlsx('data_imput.xlsx')
###----Plot: fixed size n = 500---####
data500 <- dados %>% filter(n==500)
### Mean square error (Erro quadrático médio- EQM)
EQ500 <- ggplot(data500, aes(x=percentil))+
geom_line(aes(y=EQM.media), color="#191970", size=1)+
geom_line(aes(y=EQM.RL), color="#b30000", size=1)+
geom_line(aes(y=EQM), color="#228B22", size=1)+
theme_minimal()+
ylim(17.5,28)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
labs(x = "% de dados faltantes", y="EQM",
title = "EQM", subtitle = "n=500")
### Mean absolute error - (Erro absoluto médio - EAM)
EA500 <- ggplot(data500, aes(x=percentil))+
geom_line(aes(y=EAM.media), color="#191970", size=1)+
geom_line(aes(y=EAM.RL), color="#b30000", size=1)+
geom_line(aes(y=EAM), color="#228B22",size=1)+
ylim(3.3,4.2)+
theme_minimal()+
labs(x = "% de dados faltantes", y="EAM",
title = "EAM", subtitle = "n=500")+
annotate("segment", x = 0.4, xend = 0.42, y = 3.6, yend = 3.6,
colour = "#191970", size=1)+
annotate(geom="text", x=0.45, y=3.6, label="Média",
color="black", size = 3)+
annotate("segment", x = 0.4, xend = 0.42, y = 3.57, yend = 3.57,
colour = "#b30000", size=1)+
annotate("segment", x = 0.4, xend = 0.42, y = 3.54, yend = 3.54,
colour = "#228B22", size=1)+
annotate(geom="text", x=0.465, y=3.57, label="Regressão",
color="black", size = 3)+
annotate(geom="text", x=0.455, y=3.54, label="Original",
color="black", size = 3)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
annotate(geom="text", x=0.05, y=4.2, label="",
color="black", size = 5)
plot_grid(EQ500,EA500)
data100 <- dados %>% filter(n==100)
### Mean square error (Erro quadrático médio- EQM)
EQ100 <- ggplot(data100, aes(x=percentil))+
geom_line(aes(y=EQM.media), color="#191970", size=1)+
geom_line(aes(y=EQM.RL), color="#b30000", size=1)+
geom_line(aes(y=EQM), color="#228B22", size=1)+
theme_minimal()+ylim(22.4,26.5)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
labs(x = "% de dados faltantes", y="EQM",
title = "EQM", subtitle = "n=100")
### Mean absolute error - (Erro absoluto médio - EAM)
EA100 <- ggplot(data100, aes(x=percentil))+
geom_line(aes(y=EAM.media), color="#191970", size=1)+
geom_line(aes(y=EAM.RL), color="#b30000", size=1)+
geom_line(aes(y=EAM), color="#228B22",size=1)+
theme_minimal()+
labs(x = "% de dados faltantes", y="EAM",
title = "EAM", subtitle = "n=100")+
ylim(3.8,4.15)+
annotate("segment", x = 0.4, xend = 0.42, y = 4.12, yend = 4.12,
colour = "#191970", size=1)+
annotate(geom="text", x=0.45, y=4.12, label="Média",
color="black", size = 3)+
annotate("segment", x = 0.4, xend = 0.42, y = 4.10, yend = 4.10,
colour = "#b30000", size=1)+
annotate("segment", x = 0.4, xend = 0.42, y = 4.08, yend = 4.08,
colour = "#228B22", size=1)+
annotate(geom="text", x=0.458, y=4.10, label="Regressão",
color="black", size = 3)+
annotate(geom="text", x=0.455, y=4.08, label="Original",
color="black", size = 3)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
annotate(geom="text", x=0.05, y=4.2, label="",
color="black", size = 5)
plot_grid(EQ100,EA100)
###----Plot: fixed size n = 30---####
data30 <- dados %>% filter(n==30)
### Mean square error (Erro quadrático médio- EQM)
EQ30 <-ggplot(data30, aes(x=percentil))+
geom_line(aes(y=EQM.media), color="#191970", size=1)+
geom_line(aes(y=EQM.RL), color="#b30000", size=1)+
geom_line(aes(y=EQM), color="#228B22", size=1)+
theme_minimal()+
ylim(17.5,28)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
labs(x = "% de dados faltantes", y="EQM",
title = "EQM", subtitle = "n=30")
### Mean absolute error - (Erro absoluto médio - EAM)
EA30<- ggplot(data30, aes(x=percentil))+
geom_line(aes(y=EAM.media), color="#191970", size=1)+
geom_line(aes(y=EAM.RL), color="#b30000", size=1)+
geom_line(aes(y=EAM), color="#228B22",size=1)+
ylim(3.3,4.2)+theme_minimal()+
labs(x = "% de dados faltantes", y="EAM",
title = "EAM", subtitle = "n=30")+
annotate("segment", x = 0.4, xend = 0.42, y = 4.17, yend = 4.17,
colour = "#191970", size=1)+
annotate(geom="text", x=0.45, y=4.17, label="Média",
color="black", size = 3)+
annotate("segment", x = 0.4, xend = 0.42, y = 4.13, yend = 4.13,
colour = "#b30000", size=1)+
annotate("segment", x = 0.4, xend = 0.42, y = 4.09, yend = 4.09,
colour = "#228B22", size=1)+
annotate(geom="text", x=0.465, y=4.13, label="Regressão",
color="black", size = 3)+
annotate(geom="text", x=0.455, y=4.09, label="Original",
color="black", size = 3)+
scale_x_continuous(labels = scales :: percent_format(accuracy = 1))+
annotate(geom="text", x=0.05, y=4.2, label="",
color="black", size = 5)
plot_grid(EQ30,EA30)
###----Plot: fixed na's percentile % = 20 ---####
data0.2 <- dados %>% filter(percentil==0.2)
### Mean square error (Erro quadrático médio- EQM)
EQM_0.2 <- ggplot(data0.2, aes(x=n))+
geom_line(aes(y=EQM.media), color="#191970", size=1)+
geom_line(aes(y=EQM.RL), color="#b30000", size=1)+
geom_line(aes(y=EQM), color="#228B22", size=1)+
theme_minimal()+
labs(x = "Tamanho da amostra (n)", y="EQM",
title = "EQM", subtitle = "DF's = 20%")
### Mean absolute error - (Erro absoluto médio - EAM)
EAM_0.2 <- ggplot(data0.2, aes(x=n))+
geom_line(aes(y=EAM.media), color="#191970", size=1)+
geom_line(aes(y=EAM.RL), color="#b30000", size=1)+
geom_line(aes(y=EAM), color="#228B22", size=1)+
theme_minimal()+
labs(x = "Tamanho da amostra (n)", y="EAM",
title = "EAM", subtitle = "DF's = 20%")+
annotate("segment", x = 395, xend = 415, y = 3.75, yend = 3.75,
colour = "#191970", size=1)+
annotate(geom="text", x=440, y=3.75, label="Média",
color="black", size = 3)+
annotate("segment", x = 395, xend = 415, y = 3.73, yend = 3.73,
colour = "#b30000", size=1)+
annotate("segment", x = 395, xend = 415, y = 3.71, yend = 3.71,
colour = "#228B22", size=1)+
annotate(geom="text", x=458, y=3.73, label="Regressão",
color="black", size = 3)+
annotate(geom="text", x=448, y=3.71, label="Original",
color="black", size = 3)
plot_grid( EQM_0.2, EAM_0.2)
###############################################################################
dados_lat <- dados %>% filter(n %in% c(20,50,100,500)) %>%
filter(percentil %in% c(0.05,0.2,0.3,0.5)) %>%
arrange(n, percentil)
colnames(dados_lat )
dados_lat2 <- dados_lat[,c(7,8,1,2,3,4,5,6)]
dif <- dados_lat %>% mutate(dif_eqm_med = EQM.media - EQM  ) %>%
mutate(dif_eqm_reg = EQM.RL - EQM  ) %>%
mutate(dif_ema_med = EAM.media - EAM) %>%
mutate(dif_ema_reg = EAM.RL - EAM) %>%
mutate(eqm_med_reg = abs(EQM.RL-EQM.media)) %>%
mutate(ema_med_reg = abs(EAM.media-EAM.RL))
xtable(dados_lat2)
dados_lat <- dados_lat[,c(7,8,1,2,3,4,5,6)]
